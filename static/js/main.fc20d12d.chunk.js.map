{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerTime","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","name","props","className","Component","getRandomName","value","now","toString","App","clockName","hasClock","timerId","document","addEventListener","event","preventDefault","_prevProps","prevState","debug","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,UAAY,EALd,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,UAAYE,OAAOC,aAAY,WAClC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAC3BG,OAAOG,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MAC9D,OAXP,kCAcE,WACEN,OAAOO,cAAcR,KAAKD,aAf9B,oBAkBE,WACE,IAAQU,EAAST,KAAKU,MAAdD,KACAZ,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAMS,cAAcC,OAAO,IAAK,YA/B3C,GAA2BK,aCD3B,SAASC,IACP,IAAMC,EAAQhB,KAAKiB,MAAMC,WAAWT,OAAO,GAE3C,MAAM,SAAN,OAAgBO,GAGX,IAAMG,EAAb,4MACErB,MAAQ,CACNsB,UAAW,UACXC,UAAU,GAHd,EAMEC,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBpB,KAAKoB,QAAUnB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEe,UAAWL,QAC1B,MAEHQ,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKrB,SAAS,CAAEgB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEgB,UAAU,SAnBhC,gCAuBE,SAAmBM,EAA0BC,GACvC1B,KAAKJ,MAAMuB,UACVO,EAAUR,YAAclB,KAAKJ,MAAMsB,WAEtCjB,OAAOG,QAAQuB,MAAf,uBAAqCD,EAAUR,UAA/C,eAA+DlB,KAAKJ,MAAMsB,cA3BhF,oBA+BE,WACE,MAAgClB,KAAKJ,MAA7BsB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GACI,cAAC,EAAD,CAAOV,KAAMS,WAvC1B,GAAyBN,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.fc20d12d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerTime = 0;\n\n  componentDidMount() {\n    this.timerTime = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      window.console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerTime);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentDidUpdate(_prevProps: Readonly<{}>, prevState: Readonly<State>) {\n    if (this.state.hasClock\n      && prevState.clockName !== this.state.clockName\n    ) {\n      window.console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock\n          && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}